on: push
name: CI

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        name:
          [
            btor,
            bitwuzla,
            cvc5,
            msat,
            yices2,
            z3
          ]

        include:
          - name: msat
            setup_opts: --auto-yes
          - name: yices2
            extra_macos_packages: autoconf

    name: ${{ matrix.os }}:${{ matrix.name }}
    runs-on: ${{ matrix.os}}

    steps:
      - uses: actions/checkout@v4

      - name: Install Packages (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            gperf \
            libgmp-dev \
            ninja-build \
            openjdk-8-jdk

      - name: Install Packages (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install \
            gperf \
            ninja \
            ${{ matrix.extra_macos_packages }}
          echo "LDFLAGS=-L$(brew --prefix)/lib $LDFLAGS" >> "$GITHUB_ENV"
          echo "CFLAGS=-I$(brew --prefix)/include $CFLAGS" >> "$GITHUB_ENV"
          echo "CPPFLAGS=-I$(brew --prefix)/include $CPPFLAGS" >> "$GITHUB_ENV"


      - name: Python Dependencies
        run: |
          python3 -m venv ./.venv
          source ./.venv/bin/activate
          python3 -m pip install \
            Cython>=3.0.0 \
            meson \
            pyparsing \
            pytest \
            setuptools \
            toml \
            wheel
          echo "$PWD/.venv/bin" >> $GITHUB_PATH

      - name: Install Bison
        run: ./contrib/setup-bison.sh

      - name: Install Flex (macOS)
        if: runner.os == 'macOS'
        run: ./contrib/setup-flex.sh

      - name: Setup Underlying Solver
        run: ./ci-scripts/setup-${{ matrix.name }}.sh ${{ matrix.setup_opts }}

      - name: Configure
        run: source ./.venv/bin/activate && ./configure.sh --${{ matrix.name }} --debug --python --smtlib-reader

      - name: Build
        run: |
          source ./.venv/bin/activate
          cd build
          make -j

      - name: Test C++
        run: |
          cd build
          make test

      - name: Install Python Bindings
        run: |
          source ./.venv/bin/activate
          python3 -m pip install -e ./build/python[test,pysmt]

      - name: Test Python Bindings
        run: |
          source ./.venv/bin/activate
          pytest ./tests
